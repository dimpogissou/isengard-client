version: "3.3"
services:
  isengard:
    container_name: isengard
    build: .
    volumes:
    - "/tmp/localstack:/tmp/localstack"
    - "./test_files:/build/test_files"
    environment:
    - AWS_DEFAULT_REGION=us-east-1
    - AWS_SECRET_ACCESS_KEY=foo
    - AWS_ACCESS_KEY_ID=bar
    - KAFKA_HOST=kafka-cluster
    - KAFKA_PORT=19092
    - KAFKA_TOPIC=test-kafka-topic

  localstack:
    container_name: localstack
    image: localstack/localstack:latest
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEFAULT_REGION=eu-west-1
      - AWS_DEFAULT_REGION=eu-west-1
      - HOSTNAME_EXTERNAL=localhost
      - USE_SSL=false
      - DEBUG=1
    volumes:
      - ./.aws:/docker-entrypoint-init/aws.d

  zookeeper:
    container_name: zookeeper
    image: zookeeper:3.4.9
    hostname: zookeeper
    ports:
      - "2181:2181"
    environment:
        ZOO_MY_ID: 1
        ZOO_PORT: 2181
        ZOO_SERVERS: server.1=zookeeper:2888:3888
    volumes:
      - ./zk-single-kafka-single/zookeeper/data:/data
      - ./zk-single-kafka-single/zookeeper/datalog:/datalog

  kafka:
    container_name: kafka-cluster
    image: confluentinc/cp-kafka:5.5.1
    hostname: kafka-cluster
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka-cluster:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    volumes:
      - ./zk-single-kafka-single/kafka/data:/var/lib/kafka/data
    depends_on:
      - zookeeper